from rasa_sdk import Action
from rasa_sdk.executor import CollectingDispatcher
import requests
import json

class ActionMistralResponse(Action):

    def name(self):
        return "action_mistral_response"

    def run(self, dispatcher, tracker, domain):
        question = tracker.latest_message.get("text")
        try:
            response = requests.post(
                "http://localhost:11434/api/chat",
                json={
                    "model": "mistral",
                    "messages": [
                        {"role": "user", "content": f"R√©ponds clairement √† cette question : {question}"}
                    ],
                    "stream": True
                },
                stream=True
            )

            full_response = ""
            for line in response.iter_lines():
                if line:
                    try:
                        data = json.loads(line.decode("utf-8"))
                        content = data.get("message", {}).get("content", "")
                        full_response += content
                    except Exception as err:
                        print(f"[DEBUG] Ligne ignor√©e : {line} -- {err}")

            full_response = full_response.strip()

            ### Liste √©largie des domaines accept√©s :
            sujets_valides = [
                "pollution", "air", "qualit√© de l'air", "particules fines", "PM2.5", "NO2",
                "dioxyde d'azote", "environnement", "√©cologie", "gaz √† effet de serre",
                "r√©chauffement climatique", "changement climatique", "biodiversit√©", "climat",
                "d√©forestation", "d√©chets", "√©nergies renouvelables", "CO2", "empreinte carbone",
                "polluants", "protection de la nature", "ozone", "durabilit√©", "crise climatique",
                "√©cosyst√®mes", "transport durable", "pluie acide", "recyclage", "sols", "oc√©ans",
                "d√©veloppement durable", "gaz polluants", "√©conomie verte", "transition √©nerg√©tique"
            ]

            if any(mot.lower() in full_response.lower() for mot in sujets_valides):
                dispatcher.utter_message(text=full_response)
            else:
                dispatcher.utter_message(text="Je suis sp√©cialis√© dans les questions environnementales üå±. Pose-moi une question sur la pollution, l‚Äôair, le climat ou la biodiversit√© !")

        except Exception as e:
            dispatcher.utter_message(text=f"Erreur avec le mod√®le Mistral : {e}")

        return []
